{"version":3,"sources":["ui.coffee"],"names":[],"mappings":"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","file":"ui.js","sourceRoot":"/source/","sourcesContent":["# 普通的标准渲染器，用来调试\r\nclass StandardRender\r\n  constructor: (@map)->\r\n\r\n  draw: ($paper)->\r\n    @$paper = $paper\r\n\r\n    @layout()\r\n\r\n    for id, node of @map.nodes\r\n      # console.log \"id: #{id}, \", \"x: #{node.depth}, \", \"size: #{node.size}, \", \"y: #{node.offset}\"\r\n      node.x = node.depth * 100 + 100\r\n      node.y = node.offset * 100 + 100\r\n\r\n      node.$el = jQuery '<div>'\r\n        .addClass 'node'\r\n        .html node.id\r\n        .css\r\n          'left': node.x\r\n          'top': node.y\r\n        .appendTo @$paper\r\n\r\n\r\n    for id, node of @map.nodes\r\n      for child in node.children\r\n        @draw_canvas node, child\r\n\r\n  draw_canvas: (node, child)->\r\n    w = child.x + 30 - node.x\r\n    h = child.y + 30 - node.y\r\n    $canvas = jQuery '<canvas>'\r\n      .attr 'width', w\r\n      .attr 'height', h\r\n      .css\r\n        'left': node.x\r\n        'top': node.y\r\n      .appendTo @$paper\r\n\r\n    ca = new CurveArrow $canvas[0]\r\n    ca.draw 15, 15, w - 15, h - 15, '#999'\r\n\r\n  layout: ->\r\n    offset = 0\r\n    for root in @map.roots\r\n      root.size = @_r root, 0, offset\r\n      offset = offset + root.size\r\n\r\n\r\n  _r: (node, depth, offset)->\r\n    node.depth = depth\r\n    node.offset = offset\r\n    _offset = 0\r\n    for child in node.children\r\n      child.size = @_r child, depth + 1, offset + _offset\r\n      _offset = _offset + child.size\r\n\r\n    return 1 if _offset is 0\r\n    return _offset\r\n\r\n\r\njQuery ->\r\n  url = 'data/sample.json'\r\n  new GameMap.Map().load url, (map)->\r\n    render = new StandardRender(map)\r\n    render.draw jQuery('.paper')"]}