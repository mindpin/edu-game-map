{"version":3,"sources":["frontier.coffee"],"names":[],"mappings":"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","file":"frontier.js","sourceRoot":"/source/","sourcesContent":["class ClassToggler\r\n  constructor: (@klasses...)->\r\n    # ..\r\n\r\n  toggle: (klass, $elm)->\r\n    return if not (klass in @klasses)\r\n    for k in @klasses\r\n      $elm.removeClass k\r\n    $elm.addClass klass\r\n\r\nclass MapBinder\r\n  constructor: (@$el, @node_klass, @line_klass)->\r\n    @klass_toggler = new ClassToggler 'hide', 'ready', 'done'\r\n    @klass_toggler.toggle 'hide', @$el.find(@node_klass)\r\n\r\n    @line_toggler = new ClassToggler 'hide', 'show'\r\n\r\n    @bind_events()\r\n\r\n  # 将 map 数据应用于当前地图\r\n  render: (map)->\r\n    @map = map\r\n\r\n    # 将所有节点和 dom 建立关联\r\n    for id, node of map.nodes\r\n      node._elm = @$el.find(\"#{@node_klass}[data-node=#{id}]\")\r\n\r\n    for root in map.roots\r\n      @klass_toggler.toggle 'ready', root._elm\r\n\r\n  bind_events: ->\r\n    that = this\r\n\r\n    @$el.delegate \"#{@node_klass}.ready\", 'click', ->\r\n      node_id = jQuery(this).data('node')\r\n      node = that.map.get_node node_id\r\n      that.toggle_to_done node\r\n\r\n    @$el.delegate \"#{@node_klass}.done\", 'click', ->\r\n      node_id = jQuery(this).data('node')\r\n      node = that.map.get_node node_id\r\n      for child in node.children\r\n        return if child._elm_state is 'done'\r\n      that.toggle_to_ready node\r\n\r\n  toggle_to_done: (node)->\r\n    @klass_toggler.toggle 'done', node._elm\r\n    node._elm_state = 'done'\r\n    for child in node.children\r\n      @toggle_to_ready child\r\n      $line = @$el.find(\"#{@line_klass}[data-from=#{node.id}][data-to=#{child.id}]\")\r\n      @line_toggler.toggle 'show', $line\r\n\r\n  toggle_to_ready: (node)->\r\n    @klass_toggler.toggle 'ready', node._elm\r\n    node._elm_state = 'ready'\r\n    for child in node.children\r\n      @toggle_to_hide child\r\n      $line = @$el.find(\"#{@line_klass}[data-from=#{node.id}][data-to=#{child.id}]\")\r\n      @line_toggler.toggle 'hide', $line\r\n\r\n  toggle_to_hide: (node)->\r\n    @klass_toggler.toggle 'hide', node._elm\r\n    node._elm_state = 'hide'\r\n    for child in node.children\r\n      @toggle_to_hide child\r\n\r\n\r\njQuery ->\r\n  mb = new MapBinder jQuery('.frontier-map'), '.flag', '.line'\r\n\r\n  url = 'data/m1.json'\r\n  new GameMap.Map().load url, (map)->\r\n    mb.render map"]}